name: Build Windows Flutter image

on:
  schedule:
    - cron: '30 */2 * * *'
  workflow_dispatch:
    inputs:
      force_stable_build:
        description: 'Force stable build'     
        required: true
        default: false
        type: boolean

jobs:
  get_flutter_version:
    runs-on: ubuntu-latest
    outputs:
      stable_version: ${{ steps.get_stable_version.outputs.version }}
      stable_commit: ${{ steps.get_stable_commit.outputs.hash }}
      has_new_stable_version: ${{ steps.check_if_new_stable_version.outputs.has_new_version == 'true' || inputs.force_stable_build == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: version_cache

      - run: echo ${{ inputs.force_stable_build }}

      - name: Clone Flutter stable
        run: git clone -b stable https://github.com/flutter/flutter.git flutter_stable

      - name: Get Flutter version
        id: get_stable_version
        run: |
          ./flutter_stable/bin/flutter --version
          echo "::set-output name=version::$(./flutter_stable/bin/flutter --version | grep -oP '\d+\.\d+\.\d+')"

      - name: Get Flutter commit hash
        id: get_stable_commit
        run: |
          cd flutter_stable
          echo "::set-output name=hash::$(git rev-parse HEAD)"

      - name: Check if there is a new Flutter version
        id: check_if_new_stable_version
        run: |
          echo "::set-output name=has_new_version::$(if [ "${{ steps.get_stable_commit.outputs.hash }}" = "$(cat windows/stable)" ]; then echo "false"; else echo "true"; fi)"

      - name: Print outputs
        run: |
          echo "stable_version: ${{ steps.get_stable_version.outputs.version }}"
          echo "stable_commit: ${{ steps.get_stable_commit.outputs.hash }}"
          echo "has_new_stable_version: ${{ steps.check_if_new_stable_version.outputs.has_new_version }}"


  build_stable:
    runs-on: windows-2019
    needs: get_flutter_version
    if: ${{ needs.get_flutter_version.outputs.has_new_stable_version == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Pull base image
        run: docker pull ky1vstar/flutter-tools:wsc2019-vs2019

      - name: Build image
        run: docker build --build-arg flutter_branch=stable --build-arg "flutter_hash=${{ needs.get_flutter_version.outputs.stable_commit }}" --tag ky1vstar/flutter:stable-wsc2019-vs2019 --tag "ky1vstar/flutter:${{ needs.get_flutter_version.outputs.stable_version }}-wsc2019-vs2019" windows\flutter

      - name: Push image
        run: |
          docker push "ky1vstar/flutter:${{ needs.get_flutter_version.outputs.stable_version }}-wsc2019-vs2019"
          docker push ky1vstar/flutter:stable-wsc2019-vs2019


  cache_flutter_version:
    runs-on: ubuntu-latest
    needs: [get_flutter_version, build_stable]
    if: ${{ needs.get_flutter_version.outputs.has_new_stable_version == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: version_cache

      - name: Write Flutter version
        run: echo "${{ needs.get_flutter_version.outputs.stable_commit }}" > windows/stable

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: version_cache
          commit_message: Update latest pushed Flutter version


